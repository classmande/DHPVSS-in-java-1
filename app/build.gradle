/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}


dependencies {
    // BouncyCastle provider for ECPoint, etc.
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

    // JSON, testing, etc.
    implementation 'com.google.code.gson:gson:2.10.1'
    testImplementation 'junit:junit:4.13.2'

   // SLF4J API: the logging facade called
  implementation "org.slf4j:slf4j-api:2.0.7"

  // Logback classic: the concrete SLF4J binding that actually writes logs to console/files
  runtimeOnly   "ch.qos.logback:logback-classic:1.5.11"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        // Ensure main output is included in the test classpath:
        compileClasspath += sourceSets.main.output
    }
}


testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit4 test framework
            useJUnit('4.13.2')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
  // your demoâ€™s main class:
    mainClass = 'org.example.pvss.NapDkgDemo'
}
